<<TableOfContents>>

== Mailing list ==
You can join the mailing (or just browse the archives) [[http://lists.codethink.co.uk/cgi-bin/mailman/listinfo/wizbit|here]].

== IRC ==
You can find us in #wizbit on irc.gnome.org

== JHBuild ==
As the bindings and demo apps using wizbit are in several repos, we've put together a JHBuild moduleset to help you get playing as soon as possible. Install jhbuild as normal and create a .jhbuildrc as follows:
{{{
import os

# what are we building?
moduleset = 'http://people.freedesktop.org/~johncarr/modulesets/wizbit.modules'
modules = ['meta-wizbit-demo']

# where is our dev environment?
prefix = os.path.join(os.path.expanduser('~'), 'Projects', 'wizbit')
checkoutroot = os.path.join(prefix, 'src')
buildroot = os.path.join(prefix, 'tmp')

# Skip broken modules, wizbit-python is especially borky
# skip = ['gnio', 'wizbit-python']

# gnio build system seems to choke on the --libdir argument.
# so don't worry about $(prefix)/lib64 for our demo env.
use_lib64 = False
}}}

You are of course free to change the prefix. To build wizbit, mono and python bindings and tomboy do:
{{{
jhbuild build
}}}

To try out tomboy:
{{{
jhbuild run tomboy
}}}

== Wizbit ==
This is where we are currently doing most of our work, to provide GVFS/Posix interfaces to our file stores and to provide a nice API for people wanting to do Cool Stuff with the file stores.

You can browse the source in [[http://git.codethink.co.uk/?p=wizbit;a=summary|gitweb.]]

To checkout:
{{{
git clone git://git.codethink.co.uk/git/wizbit
}}}

Standard autotools affair. You can install this in /opt or in /usr/local/stow/wizbit or you can just set LD_LIBRARY_PATH to $(top_builddir)/libwizbit/.libs/. (That shell expansion is for you to do in your head..).

To build wizbit you'll need vala 0.5.2 and gnome-common installed. As well as the usual Glib/GTK+ devel and cairo devel libraries. 

== Tomboy ==
Tomboy is currently our main test case for experimenting with APIs and deciding on how everything is going to fit together. The latest code is available at bzr-playground.

To checkout:
{{{
bzr branch http://bzr-playground.gnome.org/~johncarr/tomboy/trunk
}}}

This code will compile without libwizbit.so, but will need it to be able to run. This branch of tomboy is completely disconnected from the normal file store so shouldnt eat your notes. But vanilla tomboy will need to be closed before you can try out wizbit tomboy. Any core dumps when exiting tomboy are completely not my fault, it was already doing that :-\

Tomboy can be run uninstalled with "make run":
{{{
./autogen.sh
make
make run
}}}

== libgitcore ==
This is now defunct. We were originally planning to use a refactored git as our DVCS engine. For various reasons, we have chosen to reinvent the wheel in the form of a hexagon.

You can browse the remaining source in [[http://git.codethink.co.uk/?p=libgitcore;a=summary|gitweb.]]

To checkout:
{{{
git clone git://git.codethink.co.uk/git/libgitcore
}}}
